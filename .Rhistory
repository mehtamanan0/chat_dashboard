library(devtools)
library(devtool)
install.packages("rCharts")
library(shiny)
shiny::runApp()
View(stats_df)
stats_df_today <- stats_df[stats_df$date==get_today_date_string(),]
runApp()
runApp()
View(stats_df_today)
runApp()
conv_story <- dcast(flight_df,coll_id + conv_no + story + breaked_conv ~ "count1",value.var = "count", fun.aggregate = sum)
conv_story$count1 <- 1
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count <- cast(story_count, story~breaked_conv,sum)
#get total sum
#res <- c("Total",sum(story_count$False),sum(story_count$True))
#story_count = rbind(story_count,res)
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
conv_story <- dcast(flight_df,coll_id + conv_no + story + breaked_conv ~ "count1",value.var = "count", fun.aggregate = sum)
conv_story$count1 <- 1
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count <- cast(story_count, story~breaked_conv,sum)
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count
story_count <- cast(story_count, story~breaked_conv,sum)
story_count <- dcast(conv_story, story + breaked_conv ~"value", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count
story_count <- cast(story_count, story~breaked_conv,sum)
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
story_count <- plyr::rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_df$coll_id
data_df
# read channel df
channel_data_df <-function(date,channel){
channel_data_filename <- get_data_filename_for_channel(date, channel)
channel_data_df <- read.csv(channel_data_filename)
channel_data_df$body = as.character(channel_data_df$body)
channel_data_df$count <- 1
return(channel_data_df)
}
channel_daily_stats_df <-function(channel){
channel_daily_stats_filename <- get_data_analysis_filename(channel)
channel_daily_stats_df <- read.csv(channel_daily_stats_filename)
return(channel_daily_stats_df)
}
data_df <- channel_data_df("2017-05-14","trainschannel")
data_dff
data_df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Sys.time() -7
Sys.time() -10
as.Date(Sys.time())
as.Date(Sys.time()) - 10
min_date_range <- as.Date(Sys.time()) - 10
stats_df$date = as.Date(stats_df$date)
daily_stats = stats_df[stats_df$date >= min_date_range,]
daily_stats <- group_by(stats_df, date)
daily_stats <- summarize(daily_stats, users_count = mean(users_count, na.rm = T), total_chats = sum (total_chats,
na.rm = T),end_to_end_chats = round((sum(end_to_end_chats)/sum(total_chats))*100,2))
plot <- data.frame(date=daily_stats$date,conversation=daily_stats$total_chats,users=daily_stats$users_count,gogo_automation=daily_stats$end_to_end_chats)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
2017-05-14-flightschannel-data.csv
runApp()
data_df$coll_id_link <- paste0("<a href='",  data_df$coll_id, "' target='_blank'>GOOGLE</a>")
data_df$coll_id_link
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
Sys.Date()
Sys.Date()-1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data_df)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
1/2
1/2
integer(1/2)
numeric(1/2)
a = numeric(1/2)
a
a = as.integer(1/2)
a
length()
length(a)
shiny::runApp()
runApp()
runApp()
stats_df_day
stats_df_day <- group_by(coll_id, conv_no)
names(stats_df_day)
stats_df_day <- group_by(stats_df_day,coll_id, conv_no)
stats_df_day
stats_df_day <- summarize(stats_df_day,end_to_end_chats = as.integer(sum(end_to_end_chats)/length(end_to_end_chats)))
stats_df_day
end_end_conv <- round((sum(stats_df_day['end_to_end_chats'])/sum(stats_df_day['total_chats']))*100,2)
runApp()
stats_df_day$chats<-1
stats_df_day <- group_by(stats_df_day,coll_id, conv_no)
stats_df_day <- summarize(stats_df_day,chats = sum(chats),end_to_end_chats = as.integer(sum(end_to_end_chats)/length(end_to_end_chats)))
end_end_conv <- round((sum(stats_df_day['end_to_end_chats'])/sum(stats_df_day['chats']))*100,2)
end_end_conv
stats_df_day
stats_df_day <- read.csv('flightschannel-daily_analysis.csv')
stats_df_day <- read.csv('processed_data/flightschannel-daily_analysis.csv')
stats_df_day$chats<-1
stats_df_day <- group_by(stats_df_day,coll_id, conv_no)
stats_df_day <- summarize(stats_df_day,chats = sum(chats),end_to_end_chats = as.integer(sum(end_to_end_chats)/length(end_to_end_chats)))
end_end_conv <- round((sum(stats_df_day['end_to_end_chats'])/sum(stats_df_day['chats']))*100,2)
end_end_conv
stats_df_day
stats_df_day$value <- 1
unique_chats <- dcast(stats_df_day, coll_id + conv_no ~ "sum", value.var="value",  fun.aggregate=sum)
total_conv <- sum(unique_chats['sum'])
total_conv
stats_df_day <- read.csv('processed_data/flightschannel-daily_analysis.csv')
stats_df_day <- group_by(stats_df_day,coll_id, conv_no)
stats_df_day <- summarize(stats_df_day,end_to_end_chats = as.integer(sum(end_to_end_chats)/length(end_to_end_chats)))
stats_df_day
View(stats_df_day)
sum(stats_df_day$end_to_end_chats)
2629/4815
runApp()
runApp()
total_conv()
total_conv
end_end_conv
stats_df_day <- group_by(stats_df_day,coll_id, conv_no)
stats_df_day <- summarize(stats_df_day,end_to_end_chats = as.integer(sum(end_to_end_chats)/length(end_to_end_chats)))
end_end_conv <- round((sum(stats_df_day$end_to_end_chats)/total_conv())*100,2)
end_end_conv <- round((sum(stats_df_day$end_to_end_chats)/total_conv)*100,2)
end_end_conv
runApp()
runApp()
shiny::runApp()
runApp()
unique_chats <- dcast(stats_df_day, coll_id + conv_no ~ "sum", value.var="value",  fun.aggregate=sum)
total_conv <- sum(unique_chats['sum'])
print(total_conv)
total_conv <- reactive({
stats_df <- stats_df_r()
stats_df_day <- stats_df[stats_df$date==as.character(input$date),]
stats_df_day$value <- 1
unique_chats <- dcast(stats_df_day, coll_id + conv_no ~ "sum", value.var="value",  fun.aggregate=sum)
total_conv <- sum(unique_chats['sum'])
print(total_conv)
return(total_conv)})
unique_chats
unique_chats <- dcast(stats_df_day, coll_id + conv_no ~ ".")
unique
unique_chats
runApp()
runApp()
daily_stats = stats_df[stats_df$date >= min_date_range,]
daily_stats <- group_by(daily_stats,date + coll_id, conv_no)
daily_stats
runApp()
runApp()
runApp()
runApp()
runApp()
daily_stats <- read.csv('flightschannel-data_analysis.csv')
daily_stats <- read.csv('processed_data/flightschannel-data_analysis.csv')
daily_stats <- read.csv('processed_data/flightschannel-daily_analysis.csv')
daily_stats
View(daily_stats)
daily_stats = daily_stats[c("date","coll_id","conv_no","total_chats","end_to_end_chats")]
daily_stats <- group_by(daily_stats,date , coll_id, conv_no)
daily_stats <- summarize(daily_stats,users_count = sum(users_count, na.rm = T), end_to_end_chats = min(end_to_end_chats),
total_chats=1)
print(daily_stats)
daily_stats <- group_by(daily_stats,date , coll_id, conv_no)
daily_stats <- summarize(daily_stats,users_count = sum(users_count, na.rm = T), end_to_end_chats = min(end_to_end_chats),
total_chats=1)
daily_stats <- read.csv('processed_data/flightschannel-data_analysis.csv')
daily_stats <- read.csv('processed_data/flightschannel-daily_analysis.csv')
daily_stats = daily_stats[c("date","coll_id","conv_no","total_chats","end_to_end_chats","user_count")]
daily_stats = daily_stats[c("date","coll_id","conv_no","total_chats","end_to_end_chats","users_count")]
daily_stats <- group_by(daily_stats,date , coll_id, conv_no)
daily_stats <- summarize(daily_stats,users_count = sum(users_count, na.rm = T), end_to_end_chats = min(end_to_end_chats),
total_chats=1)
print(daily_stats)
daily_stats <- group_by(daily_stats, date)
daily_stats <- read.csv('processed_data/flightschannel-daily_analysis.csv')
daily_stats = daily_stats[c("date","coll_id","conv_no","total_chats","end_to_end_chats","users_count")]
daily_stats <- group_by(daily_stats,date , coll_id, conv_no)
daily_stats <- summarize(daily_stats,users_count = mean(users_count, na.rm = T), end_to_end_chats = min(end_to_end_chats),
total_chats=1)
print(daily_stats)
daily_stats <- group_by(daily_stats, date)
daily_stats <- summarize(daily_stats, users_count = mean(users_count, na.rm = T), total_chats = sum (total_chats,
na.rm = T),end_to_end_chats = round((sum(end_to_end_chats)/sum(total_chats))*100,2))
daily_stats
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
stats_df_day <- read.csv('processed_data/flightschannel-daily_analysis.csv')
story_count <- group_by(story_count,coll_id,conv, story)
stats_df_day
names(stats_df_day)
story_count <- stats_df_day
story_count <- group_by(story_count,coll_id,conv, story)
story_count <- group_by(story_count,coll_id,conv_no, story)
story_count
story_count <- summarize(story_count,total_chats = 1,end_to_end_chats = min(end_to_end_chats))
story_count
story_count <- summarize(story_count,total_chats = sum(total_chats),end_to_end_chats = sum(end_to_end_chats))
story_count
story_count$end_to_end_chats <- round((story_count$end_to_end_chats/story_count$total_chats)*100,2)
story_count
stats_df_day <- read.csv('processed_data/flightschannel-daily_analysis.csv')
story_count <- stats_df_day
story_count <- group_by(story_count,coll_id,conv_no, story)
story_count <- summarize(story_count,total_chats = 1,end_to_end_chats = min(end_to_end_chats))
story_count <- group_by(story_count, story)
story_count <- summarize(story_count,total_chats = sum(total_chats),end_to_end_chats = sum(end_to_end_chats))
story_count
story_count$end_to_end_chats <- round((story_count$end_to_end_chats/story_count$total_chats)*100,2)
story_count
columns <- c("story","Total Conversations","%Gogo Automate")
story_count <- plyr::rename(story_count, c("conversation"="Total Conversations","gogo_automation"="%Gogo Automate"))
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
story_count
story_count <- data.frame(story=story_count$story,conversation=story_count$total_chats,gogo_automation=story_count$end_to_end_chats)
columns <- c("story","Total Conversations","%Gogo Automate")
story_count <- plyr::rename(story_count, c("conversation"="Total Conversations","gogo_automation"="%Gogo Automate"))
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
return(story_count)
story_count
runApp()
runApp()
runApp()
runApp()
