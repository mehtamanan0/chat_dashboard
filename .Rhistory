library(devtools)
library(devtool)
install.packages("rCharts")
library(shiny)
shiny::runApp()
View(stats_df)
stats_df_today <- stats_df[stats_df$date==get_today_date_string(),]
runApp()
runApp()
View(stats_df_today)
runApp()
conv_story <- dcast(flight_df,coll_id + conv_no + story + breaked_conv ~ "count1",value.var = "count", fun.aggregate = sum)
conv_story$count1 <- 1
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count <- cast(story_count, story~breaked_conv,sum)
#get total sum
#res <- c("Total",sum(story_count$False),sum(story_count$True))
#story_count = rbind(story_count,res)
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
conv_story <- dcast(flight_df,coll_id + conv_no + story + breaked_conv ~ "count1",value.var = "count", fun.aggregate = sum)
conv_story$count1 <- 1
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count <- cast(story_count, story~breaked_conv,sum)
story_count <- dcast(conv_story, story + breaked_conv ~"count2", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count
story_count <- cast(story_count, story~breaked_conv,sum)
story_count <- dcast(conv_story, story + breaked_conv ~"value", value.var = "count1", fun.aggregate = sum)
story_count <- story_count[story_count$story!="",]
story_count
story_count <- cast(story_count, story~breaked_conv,sum)
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count$False = as.numeric(story_count$False)
story_count$True = as.numeric(story_count$True)
story_count$total_conv <- story_count$False + story_count$True
story_count$gogo_automation <- (story_count$False/story_count$total_conv)*100
story_count <- rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
story_count <- plyr::rename(story_count, c("False"="#Gogo Chat", "True"="#Chats Breaked","total_conv" = "Total Conversations","gogo_automation"="%Gogo Automate"))
columns <- c("story","Total Conversations","#Gogo Chat","#Chats Breaked","%Gogo Automate")
story_count <- story_count[,columns]
story_count <- story_count[order(-story_count$`Total Conversations`),]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data_df$coll_id
data_df
# read channel df
channel_data_df <-function(date,channel){
channel_data_filename <- get_data_filename_for_channel(date, channel)
channel_data_df <- read.csv(channel_data_filename)
channel_data_df$body = as.character(channel_data_df$body)
channel_data_df$count <- 1
return(channel_data_df)
}
channel_daily_stats_df <-function(channel){
channel_daily_stats_filename <- get_data_analysis_filename(channel)
channel_daily_stats_df <- read.csv(channel_daily_stats_filename)
return(channel_daily_stats_df)
}
data_df <- channel_data_df("2017-05-14","trainschannel")
data_dff
data_df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Sys.time() -7
Sys.time() -10
as.Date(Sys.time())
as.Date(Sys.time()) - 10
min_date_range <- as.Date(Sys.time()) - 10
stats_df$date = as.Date(stats_df$date)
daily_stats = stats_df[stats_df$date >= min_date_range,]
daily_stats <- group_by(stats_df, date)
daily_stats <- summarize(daily_stats, users_count = mean(users_count, na.rm = T), total_chats = sum (total_chats,
na.rm = T),end_to_end_chats = round((sum(end_to_end_chats)/sum(total_chats))*100,2))
plot <- data.frame(date=daily_stats$date,conversation=daily_stats$total_chats,users=daily_stats$users_count,gogo_automation=daily_stats$end_to_end_chats)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
2017-05-14-flightschannel-data.csv
runApp()
data_df$coll_id_link <- paste0("<a href='",  data_df$coll_id, "' target='_blank'>GOOGLE</a>")
data_df$coll_id_link
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
